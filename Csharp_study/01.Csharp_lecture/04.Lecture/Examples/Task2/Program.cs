System.Console.OutputEncoding = System.Text.Encoding.Unicode;
Console.Clear();

void printMatrix(int[,] mat){
    for (int i = 0; i < mat.GetLength(0); i++){
        for (int j = 0; j < mat.GetLength(1); j++){
            colorPrint(mat[i,j]);
        }
    Console.WriteLine();
    }
}
void colorPrint(int number){
    switch (number){
        case 1:
            Console.ForegroundColor = ConsoleColor.Black;
            Console.Write((char)9608);
            break;
        case 2:
            Console.ForegroundColor = ConsoleColor.Gray;
            Console.Write((char)9608);
            break;
        case 3:
            Console.ForegroundColor = ConsoleColor.Blue;
            Console.Write((char)9608);
            break;
        case 4:
            Console.ForegroundColor = ConsoleColor.Green;
            Console.Write((char)9608);
            break;
        case 5:
            Console.ForegroundColor = ConsoleColor.Cyan;
            Console.Write((char)9608);
            break;
        case 6:
            Console.ForegroundColor = ConsoleColor.Red;
            Console.Write((char)9608);
            break;
        case 7:
            Console.ForegroundColor = ConsoleColor.Magenta;
            Console.Write((char)9608);
            break;
        case 8:
            Console.ForegroundColor = ConsoleColor.Yellow;
            Console.Write((char)9608);
            break;
        default:
            Console.ForegroundColor = ConsoleColor.White;
            Console.Write((char)9608);
            break;
    }
Console.ForegroundColor = ConsoleColor.White;
}

int [,] matrix = new int[,]
{
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,3,3,3,3,0,0,0},
    {0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,3,3,3,3,0,0,0},
    {0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,3,3,3,3,0,0,0},
    {0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,2,2,2,2,0,0,0},
    {0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,2,2,2,2,0,0,0},
    {0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,2,2,2,0,0,0},
    {0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,2,2,2,0,0,0},
    {0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,2,2,2,0,0,0},
    {0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,2,2,2,0,0,0},
    {0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,2,2,2,2,0,0,0},
    {0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,2,2,2,2,0,0,0},
    {0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,2,2,2,2,0,0,0},
    {0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,2,2,2,2,0,0,0},
    {0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,2,2,2,2,0,0,0},
    {0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,2,2,2,2,0,0,0},
    {0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,2,2,2,2,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
};

/*printMatrix(matrix);*/ //Печать первого текста 

int[,] pic = new int[,]
{
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
 {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
 {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
 {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
 {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
 {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
 {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
 {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
 {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
 {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
 {0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
};

void fillPic(int row, int col){
    if (pic[row,col] == 0){
        pic[row,col] = 8;
        fillPic(row-1,col);
        fillPic(row,col-1);
        fillPic(row+1,col);
        fillPic(row,col+1);
    }
}
Console.WriteLine("Оригинал");
printMatrix(pic);//Вывод первого рисунка
fillPic(13,13);//Закраска
Console.WriteLine("Изменённый");
printMatrix(pic);//Вывод первого рисунка после закраски
